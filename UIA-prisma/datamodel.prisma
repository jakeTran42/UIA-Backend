# 'Guide' Type is user generated content
type Guide {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updateAt: DateTime @updateAt
  title: String!
  body: String!
  owner: User! @relation(link: INLINE)
}

type User {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updateAt: DateTime @updateAt
  handle: String! @unique
  email: String! @unique
  role: Role! @default(value: USER)
  password: String!
  guides: [Guide!]!
}

# All the skill in the game which will be unique elements and their attributes.
type Skill {
  id: ID! @id
  name: String! @unique
  description: String!
  skill_type: [SkillType!]! @scalarList(strategy: RELATION) @default(value: UNKNOWN)
  combat_type: [CombatType!]! @scalarList(strategy: RELATION) @default(value: UNKNOWN)
  energy: Int! @default(value: 0)
  location: Map! @relation(link: TABLE) 
  class: Class @relation(link: INLINE)
}

# All the monster skill in the game which will be unique elements and their attributes.
type MonsterSkill {
  id: ID! @id
  name: String! @unique
  description: String!
  skill_type: SkillType
  combat_type: CombatType
  energy: Int! @default(value: 0)
}

# The predetermine class type with enum ClassType
type Class {
  id: ID! @id
  name: Hero! @unique
  description: String!
  weapon: String!
  skills: [Skill!]!
}

# 'Boss' type of unique elements of boss that contain different attributes and their locations.
type Boss {
  id: ID! @id
  name: String! @unique
  element_one: Element @relation(name: "ElementEffectivenessOne")
  element_one_value: Int
  element_two: Element @relation(name: "ElementEffectivenessTwo")
  element_two_value: Int
  locations_found: [Map!]! @relation(link: TABLE)
  continent_found: [Continent!]! @relation(link: TABLE)
}

# 'BossStruct' Type is a struct of different boss stage attribute indicating specific boss location
type BossStruct {
  id: ID! @id
  createdAt: DateTime! @createdAt
  monster_found: Boss!
  minion_present: Boolean @default(value: false) 
  location: StageStruct @relation(link: TABLE) @unique
  HP: Int!
  ATK: Int!
  Armor: Int!
  AtkSpd: Float!
  skills: [MonsterSkill!]! @relation(link: TABLE)
}

# 'Stage Struct' is a struct of different stage attributes indicating the location of specfic boss.
type StageStruct {
  id: ID! @id
  stage_number: Int!
  map: Map! @relation(link: INLINE)
  base_exp: Int
  gear_level: Int
  boss_found: BossStruct 
}

# 'Map' type is a type of unique maps available in the game with different array attributes
type Map {
  id: ID! @id
  name: String! @unique
  total_stage: Int!
  bosses: [Boss!]!
  previous_map: Map @relation(name: "LastMapRelation" link: INLINE)
  next_map: Map @relation(name: "NextMapRelation" link: INLINE)
  continent: Continent! @relation(link: INLINE)
  obtainable_skills: [Skill!]!
  stages: [BossStruct!]!
}

# 'Continent' type is a type of unique continent in the game containing multiple map types
type Continent {
  id: ID! @id
  name: String! @unique
  bosses: [Boss!]!
  maps: [Map!]!
  next_continent: Continent @relation(name: "NextContinentRelation" link: INLINE)
  previous_continent: Continent @relation(name: "LastContinentRelation" link: INLINE)
}

# Element is a type that contain predetermine enum ElementType to define the types in the game.
type Element {
  id: ID! @id
  name: ElementType!
  weakness: ElementType!
  effective: ElementType!
}

# Permission role which determine access level.
enum Role {
  ADMIN
  MODERATOR
  USER
}

enum CombatType {
  UNKNOWN
  RANGE
  MEELEE
  SELF
  TEAM
}

enum SkillType {
  UNKNOWN
  BUFF
  BUFF_AOE
  DAMAGE_TARGET
  DAMAGE_AOE
  DAMAGE_DOT
  HEAL_TARGET
  HEAL_AOE
  HEAL_DOT
  TAUNT
  INTERUPT
  KNOCKUP
  SILENCE
  SUMMON
  DEBUFF
  DISPELL
  ABSORB
  STEALTH
  PASSIVE
}

enum ElementType {
  FIRE
  LIGHTNING
  FROST
  EARTH
}

enum PetTalent {
  ATK
  SYMBIOSIS
  ASSIST
  GUARDIAN
}

enum Rarity {
  NORMAL
  RARE
  EPIC
  LEGENDARY
}

enum Hero {
  WARLOCK
  SHAMAN
  ASSASSIN
  HUNTER
  DRUID
  MAGE
  GLADIATOR
  WARRIOR
}