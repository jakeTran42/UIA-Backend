# 'Guide' Type is user generated content
type Guide {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updateAt: DateTime @updateAt
  title: String!
  body: String!
  owner: User! @relation(link: INLINE)
}

type User {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updateAt: DateTime @updateAt
  handle: String! @unique
  email: String! @unique
  role: Role! @default(value: USER)
  password: String!
  guides: [Guide!]!
}

# All the skill in the game which will be unique elements and their attributes.
type Skill {
  id: ID! @id
  name: String! @unique
  description: String!
  skill_type: [SkillType!]! @scalarList(strategy: RELATION) @default(value: UNKNOWN)
  combat_type: [CombatType!]! @scalarList(strategy: RELATION) @default(value: UNKNOWN)
  energy: Int! @default(value: 0)
  location: Map @relation(link: TABLE) 
  class: Class @relation(link: INLINE)
}

# All the monster skill in the game which will be unique elements and their attributes.
type MonsterSkill {
  id: ID! @id
  name: String! @unique
  description: String!
  skill_type: [SkillType!]! @scalarList(strategy: RELATION) @default(value: UNKNOWN)
  combat_type: [CombatType!]! @scalarList(strategy: RELATION) @default(value: UNKNOWN)
  energy: Int @default(value: 0)
}

# The predetermine class type with enum ClassType
type Class {
  id: ID! @id
  name: Hero! @unique
  description: String!
  weapon: String!
  skills: [Skill!]!
}

# 'Boss' type of unique elements of boss that contain different attributes and their locations.
type Boss {
  id: ID! @id
  name: String! @unique
  element_one: Element @relation(name: "ElementEffectivenessOne")
  element_one_value: Int
  element_two: Element @relation(name: "ElementEffectivenessTwo")
  element_two_value: Int
  map_found: [Map!]! @relation(link: TABLE)
  continent_found: [Continent!]! @relation(link: TABLE)
}

# 'Stage Struct' is a struct of different stage attributes indicating the location of specfic boss.
type BossStruct {
  id: ID! @id
  map: Map! @relation(link: INLINE)
  boss: Boss!
  minion_present: Boolean @default(value: false)
  AtkSpd: Float @default(value: 1.8)
  skills: [MonsterSkill!]! @relation(link: TABLE)
}

# 'Map' type is a type of unique maps available in the game with different array attributes
type Map {
  id: ID! @id
  name: String! @unique
  total_stage: Int
  native_boss: [Boss!]!
  obtainable_skills: [Skill!]!
  bosses_found: [BossStruct!]!
  #previous_map: Map @relation(name: "LastMapRelation")
  #next_map: Map @relation(name: "NextMapRelation")
  previous_map: String
  next_map: String
  pet_unlock: [Pet!]!
  continent: Continent! @relation(link: INLINE)
  imageurl: String
}

# 'Continent' type is a type of unique continent in the game containing multiple map types
type Continent {
  id: ID! @id
  name: String! @unique
  bosses: [Boss!]!
  maps: [Map!]!
  # next_continent: Continent @relation(name: "NextContinentRelation")
  # previous_continent: Continent @relation(name: "LastContinentRelation")
  next_continent: String
  previous_continent: String
}

type Pet {
  id: ID! @id
  name: String! @unique
  element_one: Element @relation(name: "PetElementOne")
  element_one_value: Int
  element_two: Element @relation(name: "PetElementTwo")
  element_two_value: Int
  talent_cap: Float
  type: PetType
  favorite_food: Food @relation(link: INLINE)
  area: Map @relation(link: INLINE)
  imageurl: String
}

type Food {
  id: ID! @id
  name: String! @unique
  pet_favorite: [Pet!]!
  buff: Stat
  imageurl: String
}

# Element is a type that contain predetermine enum ElementType to define the types in the game.
type Element {
  id: ID! @id
  name: ElementType! @unique
  weakness: ElementType
  effective: ElementType
}

#Below are different predertermined scalar value for some types.
enum SkillType {
  UNKNOWN
  ACTIVE
  PASSIVE
}

enum CombatType {
  UNKNOWN
  BUFF
  DAMAGE
  HEAL
  CONTINUOUS
  OVER_TIME
  AREA_OF_EFFECT
  TARGET
  CROWD_CONTROL
  SUMMON
  DEBUFF
  DISPELL
  RANDOM
  ABSORB
  STEALTH
  PASSIVE
}

enum ElementType {
  FIRE
  LIGHTNING
  FROST
  EARTH
}

enum PetType {
  ASSIST
  SYMBIOSIS
  ATTACK
  GUARDIAN
}

enum Rarity {
  NORMAL
  UNCOMMON
  RARE
  EPIC
  LEGENDARY
}

enum Hero {
  WARLOCK
  SHAMAN
  ASSASSIN
  HUNTER
  DRUID
  MAGE
  GLADIATOR
  WARRIOR
}

enum Stat {
  ATTACK
  HP
  ARMOR
  ATK_SPD
  HIT
  EVASION
  CRIT
  TENACITY
  BLOCK
  IMPALE
}

# Permission role which determine access level.
enum Role {
  ADMIN
  MODERATOR
  USER
}